<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.treefrogapps.mediasessionplayer">

    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WAKE_LOCK"/>

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MusicPlayer.MVP.View.Activity.MusicActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="audio/*" />
            </intent-filter>
        </activity>

        <!-- Music service, runs in separate process -->
        <service
            android:name=".MusicPlayer.MusicService.MusicService"
            android:process=":music_service"
            android:exported="false">

            <intent-filter>
                <action android:name="com.treefrogapps.mediasessionplayer.MEDIA_ACTION_TOGGLE_PLAYBACK"/>
                <action android:name="com.treefrogapps.mediasessionplayer.MEDIA_ACTION_STOP"/>
                <action android:name="com.treefrogapps.mediasessionplayer.MEDIA_ACTION_PREVIOUS"/>
                <action android:name="com.treefrogapps.mediasessionplayer.MEDIA_ACTION_NEXT"/>
                <action android:name="com.treefrogapps.mediasessionplayer.MEDIA_ACTION_SKIP_TO"/>
            </intent-filter>
        </service>

        <!-- Media Session Receiver : Required below Lollipop. Used in conjunction with
             MediaSessionCompat to handle hardware media buttons and system gestures linked to MediaSession commands
             Also use for android.media.AUDIO_BECOMING_NOISY -->
        <receiver android:name=".MusicPlayer.MusicService.MediaSession.MediaSessionReceiver"
            android:process=":music_service"
            android:exported="false">

            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
                <action android:name="android.media.AUDIO_BECOMING_NOISY" />
            </intent-filter>
        </receiver>

    </application>

</manifest>